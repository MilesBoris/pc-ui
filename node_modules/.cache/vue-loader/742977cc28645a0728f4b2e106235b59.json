{"remainingRequest":"/Users/hw/work/memberVueD/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hw/work/memberVueD/src/views/Member/AddBankCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hw/work/memberVueD/src/views/Member/AddBankCard.vue","mtime":1557217010587},{"path":"/Users/hw/work/memberVueD/node_modules/cache-loader/dist/cjs.js","mtime":1552395991950},{"path":"/Users/hw/work/memberVueD/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hw/work/memberVueD/node_modules/cache-loader/dist/cjs.js","mtime":1552395991950},{"path":"/Users/hw/work/memberVueD/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { isPoneNumber } from \"@/utils/util\";\nexport default {\n  data: () => ({\n    banktypes: [],\n      provinces: [],\n    vmVild: {\n      requiredRule: [\n        v => (v != undefined && v != null && v != \"\") || \"必填项！\"\n      ]\n    },\n    vm: {\n      drawAccountType: \"\",\n      drawAddress: \"\",\n      account: \"\",\n      drawAccountName: \"\",\n      mobile: \"\",\n      remark: \"\",\n      bankProvinceid:0,\n      bankCityid:0,\n      bankAreaid:0\n    }\n  }),\n  created() {\n    this.mInit();\n  },\n  computed: {\n    bindBank() {\n      return this.vm.drawAccountType\n        ? this.banktypes[this.vm.drawAccountType].bankName\n        : \"未绑定银行\";\n    },\n    cCities() {\n      let pro = this.provinces.find(ele => ele.id === this.vm.bankProvinceid);\n      let cities = pro?pro.citieVos:[];\n      if (!cities) {\n        cities = [];\n      }\n      cities.unshift({ id: 0, city: \"城市\", cityid: \"\" });\n      return cities;\n    },\n    cAreas() {\n        let city = this.cCities.find(ele=>ele.id===this.vm.bankCityid);\n        let areas = city?city.areas:[];\n        if(!areas){\n            areas = [];\n        }\n        areas.unshift({id:0,area:'区县',areaid:\"\"});\n        return areas;\n    }\n  },\n  methods: {\n    mInit() {\n      this.mLoading(true);\n      this.$http.all([this.mGetBanks(), this.mGetBindBank(), this.mGetProvinces()]).then(\n        this.$http.spread((rbanks, rbindbank,provincesRes) => {\n          if (provincesRes.code === 0) {\n            this.provinces = provincesRes.data.list ? provincesRes.data.list : [];\n            this.provinces.unshift({ id: 0, province: \"省份\", provinceid: \"\" });\n          }\n          if (rbanks.code == 0) {\n            this.banktypes = rbanks.data.list;\n          } else {\n            this.mAlert(rbanks.message, () => {}, \"error\");\n          }\n          if (rbindbank.code == 0) {\n            this.vm = Object.assign(this.vm, rbindbank.data);\n          }\n          this.mLoading(false);\n        })\n      );\n    },\n    mGetBanks() {\n      return this.$http.post(\"/banktypes.json\",{lineCountry:this.sysInfo.lineCountry});\n    },\n    mGetBindBank() {\n      return this.$http.get(\"/memberUser/getbindbank.json\");\n    },\n    mGetProvinces() {\n      return this.$http.post(\"/provinces.json\");\n    },\n    mSave() {\n      if (this.vm.drawAccountType <= 0) {\n        this.mAlert(\"请选择银行类型\", null, \"warning\");\n        return;\n      }\n      if (this.vm.bankProvinceid <= 0) {\n        this.mAlert(\"请选择开户行所在省份\", null, \"warning\");\n        return;\n      }\n      if (this.vm.bankCityid <= 0) {\n        this.mAlert(\"请选择开户行所在城市\", null, \"warning\");\n        return;\n      }\n      if (this.vm.bankAreaid <= 0) {\n        this.mAlert(\"请选择开户行所在区县\", null, \"warning\");\n        return;\n      }\n      if (this.vm.drawAddress == \"\") {\n        this.mAlert(\"请填写开户行\", null, \"warning\");\n        return;\n      }\n      if (this.vm.account == \"\") {\n        this.mAlert(\"请填写银行账号\", null, \"warning\");\n        return;\n      }\n      if (this.vm.drawAccountName == \"\") {\n        this.mAlert(\"请填写开户人姓名\", null, \"warning\");\n        return;\n      }\n      if (this.vm.mobile == \"\") {\n        this.mAlert(\"请填写开户人手机号\", null, \"warning\");\n        return;\n      } else {\n        if (!this.mVildPhoneNumber(this.vm.mobile)) {\n          this.mAlert(\"输入的手机号格式不正确\", null, \"warning\");\n          return;\n        }\n      }\n      this.mLoading(true);\n      this.$http.post(\"/memberUser/bindbank.json\", this.vm).then(result => {\n        this.mLoading(false);\n        if (result.code == 0) {\n          this.mAlert(\"操作成功\", () => {}, \"success\");\n          this.mCallBack();\n          this.mClose();\n        } else {\n          this.mAlert(result.message, () => {}, \"error\");\n        }\n      });\n    },\n    mVildPhoneNumber(v) {\n      return isPoneNumber(v);\n    },\n    mCallBack() {\n      this.$emit(\"callback\", Object.assign({}, this.vm));\n    },\n    mClose() {\n      this.$emit(\"closecallback\");\n    }\n  }\n};\n",{"version":3,"sources":["AddBankCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"AddBankCard.vue","sourceRoot":"src/views/Member","sourcesContent":["<template>\n  <div class=\"userbasic_body \">\n    <div class=\"bank_tips\">温馨提示：一个手机只能绑定一个账号，请用真实资料，提款需要验证</div>\n    <div\n      class=\"line_form complaint_form \"\n      style=\"padding-left:20px;\"\n    >\n      <form ref=\"addForm\">\n        <div class=\"line\">\n          <span class=\"tit\">收款银行</span>\n          <Select\n            v-model=\"vm.drawAccountType\"\n            style=\"width:250px\"\n          >\n            <Option\n              v-for=\"(item, index) in banktypes\"\n              :key=\"index\"\n              :value=\"item.id\"\n              v-text=\"item.bankName\"\n            >{{ item.label }}</Option>\n          </Select>\n          <span class=\"tips\"><span class=\"themeCr\">*</span><span class=\"red\">请输入收款银行</span></span>\n        </div>\n        <div class=\"line\">\n          <span class=\"tit\">所在省份</span>\n          <Select\n            v-model=\"vm.bankProvinceid\"\n            style=\"width:250px\"\n          >\n            <Option\n              v-for=\"(item, index) in provinces\"\n              :key=\"index\"\n              :value=\"item.id\"\n            >{{ item.province }}</Option>\n          </Select>\n          <span class=\"tips\"><span class=\"themeCr\">*</span><span class=\"red\">请选择开户行所在省份</span></span>\n        </div>\n        <div class=\"line\">\n          <span class=\"tit\">所在城市</span>\n          <Select\n            v-model=\"vm.bankCityid\"\n            style=\"width:250px\"\n          >\n            <Option\n              v-for=\"(item, index) in cCities\"\n              :key=\"index\"\n              :value=\"item.id\"\n            >{{ item.city }}</Option>\n          </Select>\n          <span class=\"tips\"><span class=\"themeCr\">*</span><span class=\"red\">请选择开户行所在城市</span></span>\n        </div>\n        <div class=\"line\">\n          <span class=\"tit\">所在区县</span>\n          <Select\n            v-model=\"vm.bankAreaid\"\n            style=\"width:250px\"\n          >\n            <Option\n              v-for=\"(item, index) in cAreas\"\n              :key=\"index\"\n              :value=\"item.id\"\n            >{{ item.area }}</Option>\n          </Select>\n          <span class=\"tips\"><span class=\"themeCr\">*</span><span class=\"red\">请选择开户行所在区县</span></span>\n        </div>\n        <div class=\"line\">\n          <span class=\"tit\">开户行网点</span>\n          <Input\n            v-model=\"vm.drawAddress\"\n            ref=\"drawAddress\"\n            placeholder=\"请输入开户行...\"\n            style=\"width: 250px\"\n          />\n          <span class=\"tips\"><span class=\"themeCr\">*</span><span class=\"red\">XX分行XX支行</span></span>\n        </div>\n        <div class=\"line\">\n          <span class=\"tit\">银行账号</span>\n          <Input\n            v-model=\"vm.account\"\n            ref=\"account\"\n            placeholder=\"请输入银行卡号...\"\n            style=\"width: 250px\"\n          />\n          <span class=\"tips\"><span class=\"themeCr\">*</span><span class=\"red\">收款银行卡号</span></span>\n        </div>\n        <div class=\"line\">\n          <span class=\"tit\">开户姓名</span>\n          <Input\n            v-model=\"vm.drawAccountName\"\n            ref=\"drawAccountName\"\n            placeholder=\"请输入银行卡开户人姓名...\"\n            style=\"width: 250px\"\n          />\n          <span class=\"tips\"><span class=\"themeCr\">*</span><span class=\"red\">收款姓名</span></span>\n        </div>\n        <div class=\"line\">\n          <span class=\"tit\">手机号</span>\n          <Input\n            v-model=\"vm.mobile\"\n            ref=\"mobile\"\n            placeholder=\"请输入银行卡绑定手机号...\"\n            style=\"width: 250px\"\n          />\n          <span class=\"tips\"><span class=\"themeCr\">*</span><span class=\"red\">银行登记手机号码</span></span>\n        </div>\n        <div class=\"line\">\n          <span class=\"tit\"></span>\n          <button\n            @click=\"mSave\"\n            type=\"success\"\n            style=\"margin:0 auto; display: block;\"\n            class=\"ajax-submit-without-confirm-btn account_save\"\n          >确定</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport { isPoneNumber } from \"@/utils/util\";\nexport default {\n  data: () => ({\n    banktypes: [],\n      provinces: [],\n    vmVild: {\n      requiredRule: [\n        v => (v != undefined && v != null && v != \"\") || \"必填项！\"\n      ]\n    },\n    vm: {\n      drawAccountType: \"\",\n      drawAddress: \"\",\n      account: \"\",\n      drawAccountName: \"\",\n      mobile: \"\",\n      remark: \"\",\n      bankProvinceid:0,\n      bankCityid:0,\n      bankAreaid:0\n    }\n  }),\n  created() {\n    this.mInit();\n  },\n  computed: {\n    bindBank() {\n      return this.vm.drawAccountType\n        ? this.banktypes[this.vm.drawAccountType].bankName\n        : \"未绑定银行\";\n    },\n    cCities() {\n      let pro = this.provinces.find(ele => ele.id === this.vm.bankProvinceid);\n      let cities = pro?pro.citieVos:[];\n      if (!cities) {\n        cities = [];\n      }\n      cities.unshift({ id: 0, city: \"城市\", cityid: \"\" });\n      return cities;\n    },\n    cAreas() {\n        let city = this.cCities.find(ele=>ele.id===this.vm.bankCityid);\n        let areas = city?city.areas:[];\n        if(!areas){\n            areas = [];\n        }\n        areas.unshift({id:0,area:'区县',areaid:\"\"});\n        return areas;\n    }\n  },\n  methods: {\n    mInit() {\n      this.mLoading(true);\n      this.$http.all([this.mGetBanks(), this.mGetBindBank(), this.mGetProvinces()]).then(\n        this.$http.spread((rbanks, rbindbank,provincesRes) => {\n          if (provincesRes.code === 0) {\n            this.provinces = provincesRes.data.list ? provincesRes.data.list : [];\n            this.provinces.unshift({ id: 0, province: \"省份\", provinceid: \"\" });\n          }\n          if (rbanks.code == 0) {\n            this.banktypes = rbanks.data.list;\n          } else {\n            this.mAlert(rbanks.message, () => {}, \"error\");\n          }\n          if (rbindbank.code == 0) {\n            this.vm = Object.assign(this.vm, rbindbank.data);\n          }\n          this.mLoading(false);\n        })\n      );\n    },\n    mGetBanks() {\n      return this.$http.post(\"/banktypes.json\",{lineCountry:this.sysInfo.lineCountry});\n    },\n    mGetBindBank() {\n      return this.$http.get(\"/memberUser/getbindbank.json\");\n    },\n    mGetProvinces() {\n      return this.$http.post(\"/provinces.json\");\n    },\n    mSave() {\n      if (this.vm.drawAccountType <= 0) {\n        this.mAlert(\"请选择银行类型\", null, \"warning\");\n        return;\n      }\n      if (this.vm.bankProvinceid <= 0) {\n        this.mAlert(\"请选择开户行所在省份\", null, \"warning\");\n        return;\n      }\n      if (this.vm.bankCityid <= 0) {\n        this.mAlert(\"请选择开户行所在城市\", null, \"warning\");\n        return;\n      }\n      if (this.vm.bankAreaid <= 0) {\n        this.mAlert(\"请选择开户行所在区县\", null, \"warning\");\n        return;\n      }\n      if (this.vm.drawAddress == \"\") {\n        this.mAlert(\"请填写开户行\", null, \"warning\");\n        return;\n      }\n      if (this.vm.account == \"\") {\n        this.mAlert(\"请填写银行账号\", null, \"warning\");\n        return;\n      }\n      if (this.vm.drawAccountName == \"\") {\n        this.mAlert(\"请填写开户人姓名\", null, \"warning\");\n        return;\n      }\n      if (this.vm.mobile == \"\") {\n        this.mAlert(\"请填写开户人手机号\", null, \"warning\");\n        return;\n      } else {\n        if (!this.mVildPhoneNumber(this.vm.mobile)) {\n          this.mAlert(\"输入的手机号格式不正确\", null, \"warning\");\n          return;\n        }\n      }\n      this.mLoading(true);\n      this.$http.post(\"/memberUser/bindbank.json\", this.vm).then(result => {\n        this.mLoading(false);\n        if (result.code == 0) {\n          this.mAlert(\"操作成功\", () => {}, \"success\");\n          this.mCallBack();\n          this.mClose();\n        } else {\n          this.mAlert(result.message, () => {}, \"error\");\n        }\n      });\n    },\n    mVildPhoneNumber(v) {\n      return isPoneNumber(v);\n    },\n    mCallBack() {\n      this.$emit(\"callback\", Object.assign({}, this.vm));\n    },\n    mClose() {\n      this.$emit(\"closecallback\");\n    }\n  }\n};\n</script>\n"]}]}