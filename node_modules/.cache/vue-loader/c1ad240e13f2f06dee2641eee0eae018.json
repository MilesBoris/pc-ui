{"remainingRequest":"/Users/hw/work/memberVueD/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hw/work/memberVueD/src/views/Member/MemberDrawing.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hw/work/memberVueD/src/views/Member/MemberDrawing.vue","mtime":1557217026364},{"path":"/Users/hw/work/memberVueD/node_modules/cache-loader/dist/cjs.js","mtime":1552395991950},{"path":"/Users/hw/work/memberVueD/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hw/work/memberVueD/node_modules/cache-loader/dist/cjs.js","mtime":1552395991950},{"path":"/Users/hw/work/memberVueD/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport window from \"../../mixins/window\";\nexport default {\n  name: \"MemberDrawing\",\n  mixins: [window],\n  data() {\n    return {\n      banktypes: [],\n      vmCard: {\n        drawAccountName: \"\",\n        drawAccountType: \"\",\n        account: \"\",\n        drawAddress: \"\"\n      },\n      vm: {\n        dealcoin: \"\",\n        coinpwd: \"\"\n      },\n      agnetLevel: \"\"\n    };\n  },\n  mounted() {\n    this.$http.get(\"/memberUser/memberinfo.json\").then(result => {\n      if (result.code == 0) {\n        this.agnetLevel = result.data.agnetLevel;\n      }\n    });\n    this.mLoading(true);\n    this.$http.get(\"/memberUser/getbindbank.json\").then(result => {\n      if (result.code == 0 && !!result.data) {\n        this.vmCard.drawAccountType = result.data.drawAccountType;\n        this.vmCard.drawAddress = result.data.drawAddress;\n        this.vmCard.drawAccountName = result.data.drawAccountName;\n        this.vmCard.account = result.data.account;\n      }\n    });\n    this.mLoading(true);\n    this.$http.get(\"/memberUser/membercoin.json?type=3\").then(result => {\n      console.log(result.data);\n      if (result.data == -1) {\n        this.data = result.data;\n        this.mAlert(\"请先设置资金密码\", () => {\n          this.$router.push({ path: \"./safe_psw\" });\n        });\n      } else if (result.data == -2) {\n        this.mAlert(\"请先绑定银行卡\", () => {\n          this.mWinOpen(\"新增银行卡\", () => import(\"./AddBankCard\"), {}, 600);\n        });\n      }\n    });\n    this.mInit();\n  },\n  methods: {\n    mInit() {\n      this.mLoading(true);\n      this.$http.all([this.mGetBanks(), this.mGetBindBank()]).then(\n        this.$http.spread((rbanks, rbindbank) => {\n          console.log(rbanks.data, rbindbank.data);\n          this.mLoading(false);\n          if (rbanks.code == 0) {\n            this.banktypes = rbanks.data.list;\n          } else {\n            this.mAlert(rbanks.message, () => {}, \"error\");\n          }\n          if (rbindbank.code == 0) {\n            this.vmCard = Object.assign(this.vmCard, rbindbank.data);\n          }\n        })\n      );\n    },\n    mGetBanks() {\n      return this.$http.post(\"/banktypes.json\",{lineCountry:this.sysInfo.lineCountry});\n    },\n    mGetBindBank() {\n      return this.$http.get(\"/memberUser/getbindbank.json\");\n    },\n    mCash() {\n      this.mLoading(true);\n      this.$http.post(\"/memberUser/membercash.json\", this.vm).then(result => {\n        this.mLoading(false);\n        if (result.code == 0) {\n          if (result.data == 0) {\n            this.mAlert(\"操作成功\", () => {\n              console.log(\"1111111\");\n              this.$router.push({ name: \"CashList\" });\n            });\n          } else if (result.data == 1) {\n            this.mAlert(\"请先设置资金密码\", () => {\n              this.$router.push({ path: \"./safe_psw\" });\n            });\n          } else if (result.data == 2) {\n            this.mAlert(\"请先绑定银行卡\", () => {\n              this.mWinOpen(\n                \"绑定银行卡\",\n                () => import(\"./AddBankCard\"),\n                {},\n                600,\n                function(param) {\n                  this.vmcard = Object.assign(this.vmcard, param);\n                }\n              );\n            });\n          } else {\n            this.mAlert(result.message, () => {});\n          }\n        } else {\n          this.mAlert(result.message, () => {});\n        }\n      });\n    },\n    mSave() {\n      if (this.vm.dealcoin == \"\") {\n        this.mAlert(\"取现金额不能为空\");\n        return;\n      }\n      if (this.vm.dealcoin < 1) {\n        this.mAlert(\"取现金额必须大于1元\");\n        return;\n      }\n      if (this.vm.coinpwd == \"\") {\n        this.mAlert(\"请输入资金密码\");\n        return;\n      }\n      if (this.vm.dealCoin > this.coin) {\n        this.mAlert(\"余额不足\");\n        return;\n      }\n      this.mLoading(true);\n      //先检查是否给手续费\n      this.$http\n        .post(\"/memberUser/checkmembercash.json\", this.vm)\n        .then(result => {\n          this.mLoading(false);\n          if (result.code == 0) {\n            console.log(result);\n            let isCharge = false;\n            if (\n              result.data.bool &&\n              result.data.washCodeState != 0 &&\n              (result.data.countGame > result.data.gameAmount ||\n                (result.data.countGame == 0 && result.data.gameAmount == 0))\n            ) {\n              isCharge = true;\n            }\n            if (isCharge) {\n              let strConfirm =\n                \"当前打码量不足\" +\n                result.data.countGame / 100 +\n                \"，将收取\" +\n                result.data.washCodeCharge +\n                \"%的手续费，你确定要取现吗？\";\n              if (result.data.countGame <= 0) {\n                strConfirm =\n                  \"当前没有打码量，将收取\" +\n                  result.data.washCodeCharge +\n                  \"%的手续费，你确定要取现吗？\";\n              }\n              this.mConfirm(strConfirm, () => {\n                this.mLoading(true);\n                setTimeout(() => {\n                  this.mCash();\n                }, 300);\n              });\n            } else {\n              this.mCash();\n            }\n          }\n        });\n    }\n  }\n};\n",{"version":3,"sources":["MemberDrawing.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"MemberDrawing.vue","sourceRoot":"src/views/Member","sourcesContent":["<template>\n    <div class=\"container user_con\" style=\"margin-top: 72px;\">\n    <div class=\"user_left fl\">\n        <ul>\n            <li>\n                <router-link :to=\"{name:'UserCenter'}\">个人资料\n                </router-link>\n            </li>\n            <li >\n                <router-link :to=\"{name:'SafePassword'}\">安全管理\n                </router-link>\n            </li>\n            <li class=\"active\">\n                <router-link :to=\"{name:'FinanceCenter'}\">财务中心\n                </router-link>\n            </li>\n            <li >\n                <router-link :to=\"{name:'ReportTransfer'}\">客户报表</router-link>\n            </li>\n            <li v-if=\"agnetLevel>0\">\n                <router-link :to=\"{name:'AgentThat'}\">代理管理</router-link>\n            </li>\n            <li v-if=\"agnetLevel>0\">\n                <router-link :to=\"{name:'MembermanAgement'}\">代理报表</router-link>\n            </li>\n            <li>\n                <router-link :to=\"{name:'ServiceCenter'}\">服务中心</router-link>\n            </li>\n            <li>\n                    <router-link :to=\"{name:'ConversionRecord'}\">商城中心</router-link>\n                </li>\n\n\n        </ul>\n    </div>\n    <div class=\"user_right \">\n        <div class=\"userbasic_head\">\n    <router-link :to=\"{name:'FinanceCenter'}\">会员存款</router-link>\n    <router-link :to=\"{name:'FinanceOfflineDeposit'}\">线下存款</router-link>\n    <router-link :to=\"{name:'MemberDrawing'}\" class=\"active\">会员提款</router-link>\n    <router-link :to=\"{name:'IndoorTransfer'}\">户内转账</router-link>\n\n</div>\n<div class=\"userbasic_body\">\n    <div class=\"bank_tips\">温馨提示：每天提款次数不限 (当天北京时间00:00:00-次日23:59:59)</div>\n    <div class=\"line_form\">\n        <form action=\"#\" method=\"post\">\n            <div class=\"line\">\n                <span class=\"tit\">开户姓名</span>\n                <span >{{vmCard.drawAccountName}}</span>\n            </div>\n            <div class=\"line\">\n                <span class=\"tit\">收款银行</span>\n                <Select v-model=\"vmCard.drawAccountType\" style=\"width:250px\" disabled>\n                    <Option v-for=\"(item, index) in banktypes\" :key=\"index\" :value=\"item.id\" >{{item.bankName}}</Option>\n                </Select>\n            </div>\n            <div class=\"line\">\n                <span class=\"tit\">银行账号</span>\n                <span>{{vmCard.account}}</span>\n            </div>\n            <div class=\"line\">\n                <span class=\"tit\">开户行网点</span>\n                <span>{{vmCard.drawAddress}}</span>\n            </div>\n            <div class=\"line\">\n                <span class=\"tit\">提款金额</span>\n                <input type=\"text\" class=\"inp\" v-model=\"vm.dealcoin\" placeholder=\"输入提款金额(最低100)\">\n                <span class=\"tips error-tips\">提款金额不能少于100元</span>\n            </div>\n            <div class=\"line\">\n                <span class=\"tit\">取款密码</span>\n                <input type=\"password\" class=\"inp\" v-model=\"vm.coinpwd\" placeholder=\"请输入支付密码\" maxlength=\"6\">\n\n            </div>\n            <div class=\"line\">\n                <span class=\"tit\"></span>\n                <button type=\"button\" class=\"ajax-submit-without-confirm-btn account_save\" @click=\"mSave\">确定</button>\n            </div>\n        </form>\n    </div>\n</div>\n        </div>\n</div>\n</template>\n<script>\nimport window from \"../../mixins/window\";\nexport default {\n  name: \"MemberDrawing\",\n  mixins: [window],\n  data() {\n    return {\n      banktypes: [],\n      vmCard: {\n        drawAccountName: \"\",\n        drawAccountType: \"\",\n        account: \"\",\n        drawAddress: \"\"\n      },\n      vm: {\n        dealcoin: \"\",\n        coinpwd: \"\"\n      },\n      agnetLevel: \"\"\n    };\n  },\n  mounted() {\n    this.$http.get(\"/memberUser/memberinfo.json\").then(result => {\n      if (result.code == 0) {\n        this.agnetLevel = result.data.agnetLevel;\n      }\n    });\n    this.mLoading(true);\n    this.$http.get(\"/memberUser/getbindbank.json\").then(result => {\n      if (result.code == 0 && !!result.data) {\n        this.vmCard.drawAccountType = result.data.drawAccountType;\n        this.vmCard.drawAddress = result.data.drawAddress;\n        this.vmCard.drawAccountName = result.data.drawAccountName;\n        this.vmCard.account = result.data.account;\n      }\n    });\n    this.mLoading(true);\n    this.$http.get(\"/memberUser/membercoin.json?type=3\").then(result => {\n      console.log(result.data);\n      if (result.data == -1) {\n        this.data = result.data;\n        this.mAlert(\"请先设置资金密码\", () => {\n          this.$router.push({ path: \"./safe_psw\" });\n        });\n      } else if (result.data == -2) {\n        this.mAlert(\"请先绑定银行卡\", () => {\n          this.mWinOpen(\"新增银行卡\", () => import(\"./AddBankCard\"), {}, 600);\n        });\n      }\n    });\n    this.mInit();\n  },\n  methods: {\n    mInit() {\n      this.mLoading(true);\n      this.$http.all([this.mGetBanks(), this.mGetBindBank()]).then(\n        this.$http.spread((rbanks, rbindbank) => {\n          console.log(rbanks.data, rbindbank.data);\n          this.mLoading(false);\n          if (rbanks.code == 0) {\n            this.banktypes = rbanks.data.list;\n          } else {\n            this.mAlert(rbanks.message, () => {}, \"error\");\n          }\n          if (rbindbank.code == 0) {\n            this.vmCard = Object.assign(this.vmCard, rbindbank.data);\n          }\n        })\n      );\n    },\n    mGetBanks() {\n      return this.$http.post(\"/banktypes.json\",{lineCountry:this.sysInfo.lineCountry});\n    },\n    mGetBindBank() {\n      return this.$http.get(\"/memberUser/getbindbank.json\");\n    },\n    mCash() {\n      this.mLoading(true);\n      this.$http.post(\"/memberUser/membercash.json\", this.vm).then(result => {\n        this.mLoading(false);\n        if (result.code == 0) {\n          if (result.data == 0) {\n            this.mAlert(\"操作成功\", () => {\n              console.log(\"1111111\");\n              this.$router.push({ name: \"CashList\" });\n            });\n          } else if (result.data == 1) {\n            this.mAlert(\"请先设置资金密码\", () => {\n              this.$router.push({ path: \"./safe_psw\" });\n            });\n          } else if (result.data == 2) {\n            this.mAlert(\"请先绑定银行卡\", () => {\n              this.mWinOpen(\n                \"绑定银行卡\",\n                () => import(\"./AddBankCard\"),\n                {},\n                600,\n                function(param) {\n                  this.vmcard = Object.assign(this.vmcard, param);\n                }\n              );\n            });\n          } else {\n            this.mAlert(result.message, () => {});\n          }\n        } else {\n          this.mAlert(result.message, () => {});\n        }\n      });\n    },\n    mSave() {\n      if (this.vm.dealcoin == \"\") {\n        this.mAlert(\"取现金额不能为空\");\n        return;\n      }\n      if (this.vm.dealcoin < 1) {\n        this.mAlert(\"取现金额必须大于1元\");\n        return;\n      }\n      if (this.vm.coinpwd == \"\") {\n        this.mAlert(\"请输入资金密码\");\n        return;\n      }\n      if (this.vm.dealCoin > this.coin) {\n        this.mAlert(\"余额不足\");\n        return;\n      }\n      this.mLoading(true);\n      //先检查是否给手续费\n      this.$http\n        .post(\"/memberUser/checkmembercash.json\", this.vm)\n        .then(result => {\n          this.mLoading(false);\n          if (result.code == 0) {\n            console.log(result);\n            let isCharge = false;\n            if (\n              result.data.bool &&\n              result.data.washCodeState != 0 &&\n              (result.data.countGame > result.data.gameAmount ||\n                (result.data.countGame == 0 && result.data.gameAmount == 0))\n            ) {\n              isCharge = true;\n            }\n            if (isCharge) {\n              let strConfirm =\n                \"当前打码量不足\" +\n                result.data.countGame / 100 +\n                \"，将收取\" +\n                result.data.washCodeCharge +\n                \"%的手续费，你确定要取现吗？\";\n              if (result.data.countGame <= 0) {\n                strConfirm =\n                  \"当前没有打码量，将收取\" +\n                  result.data.washCodeCharge +\n                  \"%的手续费，你确定要取现吗？\";\n              }\n              this.mConfirm(strConfirm, () => {\n                this.mLoading(true);\n                setTimeout(() => {\n                  this.mCash();\n                }, 300);\n              });\n            } else {\n              this.mCash();\n            }\n          }\n        });\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n"]}]}