{"remainingRequest":"/Users/hw/work/memberVueD/node_modules/babel-loader/lib/index.js!/Users/hw/work/memberVueD/src/store/modules/regcode.js","dependencies":[{"path":"/Users/hw/work/memberVueD/src/store/modules/regcode.js","mtime":1552384689494},{"path":"/Users/hw/work/memberVueD/node_modules/cache-loader/dist/cjs.js","mtime":1552395991950},{"path":"/Users/hw/work/memberVueD/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/hw/work/memberVueD/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport types from '../mutation-types';\nexport default {\n  state: {\n    regcode: ''\n  },\n  getters: {\n    getRegcode: function getRegcode(state) {\n      return state.regcode;\n    }\n  },\n  mutations: _defineProperty({}, types.REGISTER_CODE, function (state, val) {\n    state.regcode = val;\n  }),\n  actions: _defineProperty({}, types.REGISTER_CODE, function (_ref, val) {\n    var commit = _ref.commit;\n    commit(types.REGISTER_CODE, val);\n  })\n};",{"version":3,"sources":["/Users/hw/work/memberVueD/src/store/modules/regcode.js"],"names":["types","state","regcode","getters","getRegcode","mutations","REGISTER_CODE","val","actions","commit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,mBAAlB;AAEA,eAAc;AACVC,EAAAA,KAAK,EAAC;AACFC,IAAAA,OAAO,EAAC;AADN,GADI;AAIVC,EAAAA,OAAO,EAAC;AACJC,IAAAA,UAAU,EAAC,oBAACH,KAAD,EAAS;AAChB,aAAOA,KAAK,CAACC,OAAb;AACH;AAHG,GAJE;AASVG,EAAAA,SAAS,sBACJL,KAAK,CAACM,aADF,YACiBL,KADjB,EACuBM,GADvB,EAC2B;AAC5BN,IAAAA,KAAK,CAACC,OAAN,GAAgBK,GAAhB;AACH,GAHI,CATC;AAcVC,EAAAA,OAAO,sBACFR,KAAK,CAACM,aADJ,kBAC4BC,GAD5B,EACgC;AAAA,QAAZE,MAAY,QAAZA,MAAY;AAC/BA,IAAAA,MAAM,CAACT,KAAK,CAACM,aAAP,EAAqBC,GAArB,CAAN;AACH,GAHE;AAdG,CAAd","sourcesContent":["import types from '../mutation-types'\n\nexport default{\n    state:{\n        regcode:'',\n    },\n    getters:{\n        getRegcode:(state)=>{\n            return state.regcode;\n        }\n    },\n    mutations:{\n        [types.REGISTER_CODE](state,val){\n            state.regcode = val;\n        },\n    },\n    actions:{\n        [types.REGISTER_CODE]({commit},val){\n            commit(types.REGISTER_CODE,val);\n        },\n    }\n}"]}]}