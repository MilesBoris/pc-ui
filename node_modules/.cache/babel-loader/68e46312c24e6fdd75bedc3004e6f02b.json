{"remainingRequest":"/Users/hw/work/memberVueD/node_modules/thread-loader/dist/cjs.js!/Users/hw/work/memberVueD/node_modules/babel-loader/lib/index.js!/Users/hw/work/memberVueD/src/utils/util.js","dependencies":[{"path":"/Users/hw/work/memberVueD/src/utils/util.js","mtime":1552620126363},{"path":"/Users/hw/work/memberVueD/node_modules/cache-loader/dist/cjs.js","mtime":1552395991950},{"path":"/Users/hw/work/memberVueD/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hw/work/memberVueD/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _parseInt from \"/Users/hw/work/memberVueD/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _objectSpread from \"/Users/hw/work/memberVueD/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$keys from \"/Users/hw/work/memberVueD/node_modules/@babel/runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _Array$isArray from \"/Users/hw/work/memberVueD/node_modules/@babel/runtime-corejs2/core-js/array/is-array\";\nimport _typeof from \"/Users/hw/work/memberVueD/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\nexport function find(list, f) {\n  return list.filter(f)[0];\n}\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\nexport function deepCopy(obj) {\n  var cache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  // just return if obj is immutable value\n  if (obj === null || _typeof(obj) !== 'object') {\n    return obj;\n  } // if obj is hit, it is in circular structure\n\n\n  var hit = find(cache, function (c) {\n    return c.original === obj;\n  });\n\n  if (hit) {\n    return hit.copy;\n  }\n\n  var copy = _Array$isArray(obj) ? [] : {}; // put the copy into cache at first\n  // because we want to refer it in recursive deepCopy\n\n  cache.push({\n    original: obj,\n    copy: copy\n  });\n\n  _Object$keys(obj).forEach(function (key) {\n    copy[key] = deepCopy(obj[key], cache);\n  });\n\n  return copy;\n}\n/**\n * forEach for object\n */\n\nexport function forEachValue(obj, fn) {\n  _Object$keys(obj).forEach(function (key) {\n    return fn(obj[key], key);\n  });\n}\nexport function isObject(obj) {\n  return obj !== null && _typeof(obj) === 'object';\n}\nexport function isPromise(val) {\n  return val && typeof val.then === 'function';\n}\nexport function assert(condition, msg) {\n  if (!condition) throw new Error(\"[vuex] \".concat(msg));\n}\nexport function isEmptyObject(obj) {\n  for (var name in obj) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * 根据对象的某个属性查找该对象是否存在于数组\n * @param {*查找的数组} arrayToSearch\n * @param {*属性名称} attr\n * @param {*属性值} val\n */\n\nexport function findElemInArray(arrayToSearch, attr, val) {\n  for (var i = 0; i < arrayToSearch.length; i++) {\n    if (arrayToSearch[i][attr] == val) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n/**\n * 对象拷贝；方式二：JSON.parse(JSON.stringify(obj))\n * @param {*需要拷贝的对象} value\n * @param {*true深拷贝} isDeep\n */\n\nexport function clone(value, isDeep) {\n  if (value === null) return null;\n  if (_typeof(value) !== 'object') return value;\n\n  if (_Array$isArray(value)) {\n    if (isDeep) {\n      return value.map(function (item) {\n        return clone(item, true);\n      });\n    }\n\n    return [].concat(value);\n  } else {\n    if (isDeep) {\n      var obj = {};\n\n      _Object$keys(value).forEach(function (item) {\n        obj[item] = clone(value[item], true);\n      });\n\n      return obj;\n    }\n\n    return _objectSpread({}, value);\n  }\n}\n/**\n * 金额转大写 money2Chinese(1234) // 壹仟贰佰叁拾肆元整\n * @param {*} num\n */\n\nexport function money2Chinese(num) {\n  if (_typeof(num)) throw new Error('参数为数字');\n  var strOutput = \"\";\n  var strUnit = '仟佰拾亿仟佰拾万仟佰拾元角分';\n  num += \"00\";\n  var intPos = num.indexOf('.');\n\n  if (intPos >= 0) {\n    num = num.substring(0, intPos) + num.substr(intPos + 1, 2);\n  }\n\n  strUnit = strUnit.substr(strUnit.length - num.length);\n\n  for (var i = 0; i < num.length; i++) {\n    strOutput += '零壹贰叁肆伍陆柒捌玖'.substr(num.substr(i, 1), 1) + strUnit.substr(i, 1);\n  }\n\n  return strOutput.replace(/零角零分$/, '整').replace(/零[仟佰拾]/g, '零').replace(/零{2,}/g, '零').replace(/零([亿|万])/g, '$1').replace(/零+元/, '元').replace(/亿零{0,3}万/, '亿').replace(/^元/, \"零元\");\n}\n/**\n * 日期格式化\n * @param {*} value\n * @param {*} fmt 默认 yyyy-MM-dd HH:mm:ss\n */\n\nexport function dateFormat(value, fmt) {\n  if (!value) return \"\";\n  value += \"\";\n\n  if (value.length == 10) {\n    value = value * 1000;\n  } else if (value.indexOf(\"T\") > 0) {\n    value = value.replace(\"T\", \" \");\n    return value;\n  }\n\n  var date = new Date(value);\n\n  if (fmt == undefined) {\n    fmt = \"yyyy-MM-dd hh:mm:ss\";\n  }\n\n  var o = {\n    \"M+\": date.getMonth() + 1,\n    //月份\n    \"d+\": date.getDate(),\n    //日\n    \"h+\": date.getHours(),\n    //小时\n    \"m+\": date.getMinutes(),\n    //分\n    \"s+\": date.getSeconds(),\n    //秒\n    \"q+\": Math.floor((date.getMonth() + 3) / 3),\n    //季度\n    S: date.getMilliseconds() //毫秒\n\n  };\n  if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n\n  for (var k in o) {\n    if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n  }\n\n  return fmt;\n}\n/**\n * var guid = new GUID();\n * alert(guid.newGUID());\n */\n\nexport function GUID() {\n  this.date = new Date();\n  /* 判断是否初始化过，如果初始化过以下代码，则以下代码将不再执行，实际中只执行一次 */\n\n  if (typeof this.newGUID != 'function') {\n    /* 生成GUID码 */\n    GUID.prototype.newGUID = function () {\n      this.date = new Date();\n      var guidStr = '';\n      var sexadecimalDate = this.hexadecimal(this.getGUIDDate(), 16);\n      var sexadecimalTime = this.hexadecimal(this.getGUIDTime(), 16);\n\n      for (var i = 0; i < 9; i++) {\n        guidStr += Math.floor(Math.random() * 16).toString(16);\n      }\n\n      guidStr += sexadecimalDate;\n      guidStr += sexadecimalTime;\n\n      while (guidStr.length < 32) {\n        guidStr += Math.floor(Math.random() * 16).toString(16);\n      }\n\n      return this.formatGUID(guidStr);\n    };\n    /* * 功能：获取当前日期的GUID格式，即8位数的日期：19700101 * 返回值：返回GUID日期格式的字条串 */\n\n\n    GUID.prototype.getGUIDDate = function () {\n      return this.date.getFullYear() + this.addZero(this.date.getMonth() + 1) + this.addZero(this.date.getDay());\n    };\n    /* * 功能：获取当前时间的GUID格式，即8位数的时间，包括毫秒，毫秒为2位数：12300933 * 返回值：返回GUID日期格式的字条串 */\n\n\n    GUID.prototype.getGUIDTime = function () {\n      return this.addZero(this.date.getHours()) + this.addZero(this.date.getMinutes()) + this.addZero(this.date.getSeconds()) + this.addZero(_parseInt(this.date.getMilliseconds() / 10));\n    };\n    /* * 功能: 为一位数的正整数前面添加0，如果是可以转成非NaN数字的字符串也可以实现 * 参数: 参数表示准备再前面添加0的数字或可以转换成数字的字符串 * 返回值: 如果符合条件，返回添加0后的字条串类型，否则返回自身的字符串 */\n\n\n    GUID.prototype.addZero = function (num) {\n      if (Number(num).toString() != 'NaN' && num >= 0 && num < 10) {\n        return '0' + Math.floor(num);\n      } else {\n        return num.toString();\n      }\n    };\n    /*  * 功能：将y进制的数值，转换为x进制的数值 * 参数：第1个参数表示欲转换的数值；第2个参数表示欲转换的进制；第3个参数可选，表示当前的进制数，如不写则为10 * 返回值：返回转换后的字符串 */\n\n\n    GUID.prototype.hexadecimal = function (num, x, y) {\n      if (y != undefined) {\n        return _parseInt(num.toString(), y).toString(x);\n      } else {\n        return _parseInt(num.toString()).toString(x);\n      }\n    };\n    /* * 功能：格式化32位的字符串为GUID模式的字符串 * 参数：第1个参数表示32位的字符串 * 返回值：标准GUID格式的字符串 */\n\n\n    GUID.prototype.formatGUID = function (guidStr) {\n      var str1 = guidStr.slice(0, 8) + '-',\n          str2 = guidStr.slice(8, 12) + '-',\n          str3 = guidStr.slice(12, 16) + '-',\n          str4 = guidStr.slice(16, 20) + '-',\n          str5 = guidStr.slice(20);\n      return str1 + str2 + str3 + str4 + str5;\n    };\n  }\n}\n/**\n * 有效手机号验证\n * @param {*} str\n */\n\nexport function isPoneNumber(str) {\n  var myreg = /^[1][3,4,5,6,7,8,9][0-9]{9}$/;\n\n  if (!myreg.test(str)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n/**\n * 获取会员转账状态同时进行跳转显示\n * @param _this 调用的上下文\n */\n// export function getMemberTransferState(_this) {\n//   _this.mLoading(true, \"请稍等，处理中...\");\n//   _this.$http.get(`${_this.cApi}/memberUser/membercoin.json`).then(result => {\n//     if (result.code == 0) {\n//       if (result.data >= 0) {\n//         this.mWinOpen(\n//           \"会员转账\",\n//           () => import(\"@/components/usercenter/memberTransfer\"),\n//           {},\n//           400\n//         );\n//       } else if (result.data == -1) {\n//         _this.mWinOpen(\n//           \"请先完善资金密码\",\n//           () => import(\"@/components/usercenter/coinpassword\"),\n//           {},\n//           400\n//         );\n//         /* this.mAlert(\"请先设置资金密码\", () => {\n//         }); */\n//       } else if (result.data == -2) {\n//         _this.mAlert(\"请先绑定银行卡\", () => {\n//           _this.mWinOpen(\n//             \"绑定银行卡\",\n//             () => import(\"../components/usercenter/bindBankCard\"),\n//             {},\n//             600\n//           );\n//         });\n//       }\n//     }\n//   });\n// }",{"version":3,"sources":["/Users/hw/work/memberVueD/src/utils/util.js"],"names":["find","list","f","filter","deepCopy","obj","cache","hit","c","original","copy","push","forEach","key","forEachValue","fn","isObject","isPromise","val","then","assert","condition","msg","Error","isEmptyObject","name","findElemInArray","arrayToSearch","attr","i","length","clone","value","isDeep","map","item","concat","money2Chinese","num","strOutput","strUnit","intPos","indexOf","substring","substr","replace","dateFormat","fmt","date","Date","undefined","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","S","getMilliseconds","test","RegExp","$1","getFullYear","k","GUID","newGUID","prototype","guidStr","sexadecimalDate","hexadecimal","getGUIDDate","sexadecimalTime","getGUIDTime","random","toString","formatGUID","addZero","getDay","Number","x","y","str1","slice","str2","str3","str4","str5","isPoneNumber","str","myreg"],"mappings":"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","sourcesContent":["/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\nexport function find(list, f) {\n  return list.filter(f)[0]\n}\n\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\nexport function deepCopy(obj, cache = []) {\n  // just return if obj is immutable value\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  // if obj is hit, it is in circular structure\n  const hit = find(cache, c => c.original === obj)\n  if (hit) {\n    return hit.copy\n  }\n\n  const copy = Array.isArray(obj) ? [] : {}\n  // put the copy into cache at first\n  // because we want to refer it in recursive deepCopy\n  cache.push({\n    original: obj,\n    copy\n  })\n\n  Object.keys(obj).forEach(key => {\n    copy[key] = deepCopy(obj[key], cache)\n  })\n\n  return copy\n}\n\n/**\n * forEach for object\n */\nexport function forEachValue(obj, fn) {\n  Object.keys(obj).forEach(key => fn(obj[key], key))\n}\n\nexport function isObject(obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nexport function isPromise(val) {\n  return val && typeof val.then === 'function'\n}\n\nexport function assert(condition, msg) {\n  if (!condition) throw new Error(`[vuex] ${msg}`)\n}\nexport function isEmptyObject(obj) {\n  for (var name in obj) {\n    return false;\n  }\n  return true;\n}\n/**\n * 根据对象的某个属性查找该对象是否存在于数组\n * @param {*查找的数组} arrayToSearch\n * @param {*属性名称} attr\n * @param {*属性值} val\n */\nexport function findElemInArray(arrayToSearch, attr, val) {\n  for (var i = 0; i < arrayToSearch.length; i++) {\n    if (arrayToSearch[i][attr] == val) {\n      return i;\n    }\n  }\n  return -1;\n}\n/**\n * 对象拷贝；方式二：JSON.parse(JSON.stringify(obj))\n * @param {*需要拷贝的对象} value\n * @param {*true深拷贝} isDeep\n */\nexport function clone(value, isDeep) {\n  if (value === null) return null;\n  if (typeof value !== 'object') return value\n  if (Array.isArray(value)) {\n    if (isDeep) {\n      return value.map(item => clone(item, true))\n    }\n    return [].concat(value)\n  } else {\n    if (isDeep) {\n      var obj = {};\n      Object.keys(value).forEach(item => {\n        obj[item] = clone(value[item], true)\n      })\n      return obj;\n    }\n    return { ...value }\n  }\n}\n/**\n * 金额转大写 money2Chinese(1234) // 壹仟贰佰叁拾肆元整\n * @param {*} num\n */\nexport function money2Chinese(num) {\n  if (typeof num) throw new Error('参数为数字')\n  let strOutput = \"\"\n  let strUnit = '仟佰拾亿仟佰拾万仟佰拾元角分'\n  num += \"00\"\n  const intPos = num.indexOf('.')\n  if (intPos >= 0) {\n    num = num.substring(0, intPos) + num.substr(intPos + 1, 2)\n  }\n  strUnit = strUnit.substr(strUnit.length - num.length)\n  for (let i = 0; i < num.length; i++) {\n    strOutput += '零壹贰叁肆伍陆柒捌玖'.substr(num.substr(i, 1), 1) + strUnit.substr(i, 1)\n  }\n\n  return strOutput.replace(/零角零分$/, '整').replace(/零[仟佰拾]/g, '零').replace(/零{2,}/g, '零').replace(/零([亿|万])/g, '$1').replace(/零+元/, '元').replace(/亿零{0,3}万/, '亿').replace(/^元/, \"零元\");\n}\n\n/**\n * 日期格式化\n * @param {*} value\n * @param {*} fmt 默认 yyyy-MM-dd HH:mm:ss\n */\nexport function dateFormat(value, fmt) {\n  if (!value) return \"\";\n  value += \"\";\n  if (value.length == 10) {\n    value = value * 1000;\n  } else if (value.indexOf(\"T\") > 0) {\n    value = value.replace(\"T\", \" \");\n    return value;\n  }\n  var date = new Date(value);\n  if (fmt == undefined) {\n    fmt = \"yyyy-MM-dd hh:mm:ss\";\n  }\n  var o = {\n    \"M+\": date.getMonth() + 1, //月份\n    \"d+\": date.getDate(), //日\n    \"h+\": date.getHours(), //小时\n    \"m+\": date.getMinutes(), //分\n    \"s+\": date.getSeconds(), //秒\n    \"q+\": Math.floor((date.getMonth() + 3) / 3), //季度\n    S: date.getMilliseconds() //毫秒\n  };\n  if (/(y+)/.test(fmt))\n    fmt = fmt.replace(\n      RegExp.$1,\n      (date.getFullYear() + \"\").substr(4 - RegExp.$1.length)\n    );\n  for (var k in o)\n    if (new RegExp(\"(\" + k + \")\").test(fmt))\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length)\n      );\n  return fmt;\n}\n/**\n * var guid = new GUID();\n * alert(guid.newGUID());\n */\nexport function GUID() {\n  this.date = new Date();   /* 判断是否初始化过，如果初始化过以下代码，则以下代码将不再执行，实际中只执行一次 */\n  if (typeof this.newGUID != 'function') {   /* 生成GUID码 */\n    GUID.prototype.newGUID = function () {\n      this.date = new Date(); var guidStr = '';\n      var sexadecimalDate = this.hexadecimal(this.getGUIDDate(), 16);\n      var sexadecimalTime = this.hexadecimal(this.getGUIDTime(), 16);\n      for (var i = 0; i < 9; i++) {\n        guidStr += Math.floor(Math.random() * 16).toString(16);\n      }\n      guidStr += sexadecimalDate;\n      guidStr += sexadecimalTime;\n      while (guidStr.length < 32) {\n        guidStr += Math.floor(Math.random() * 16).toString(16);\n      }\n      return this.formatGUID(guidStr);\n    }\n    /* * 功能：获取当前日期的GUID格式，即8位数的日期：19700101 * 返回值：返回GUID日期格式的字条串 */\n    GUID.prototype.getGUIDDate = function () {\n      return this.date.getFullYear() + this.addZero(this.date.getMonth() + 1) + this.addZero(this.date.getDay());\n    }\n    /* * 功能：获取当前时间的GUID格式，即8位数的时间，包括毫秒，毫秒为2位数：12300933 * 返回值：返回GUID日期格式的字条串 */\n    GUID.prototype.getGUIDTime = function () {\n      return this.addZero(this.date.getHours()) + this.addZero(this.date.getMinutes()) + this.addZero(this.date.getSeconds()) + this.addZero(parseInt(this.date.getMilliseconds() / 10));\n    }\n    /* * 功能: 为一位数的正整数前面添加0，如果是可以转成非NaN数字的字符串也可以实现 * 参数: 参数表示准备再前面添加0的数字或可以转换成数字的字符串 * 返回值: 如果符合条件，返回添加0后的字条串类型，否则返回自身的字符串 */\n    GUID.prototype.addZero = function (num) {\n      if (Number(num).toString() != 'NaN' && num >= 0 && num < 10) {\n        return '0' + Math.floor(num);\n      } else {\n        return num.toString();\n      }\n    }\n        /*  * 功能：将y进制的数值，转换为x进制的数值 * 参数：第1个参数表示欲转换的数值；第2个参数表示欲转换的进制；第3个参数可选，表示当前的进制数，如不写则为10 * 返回值：返回转换后的字符串 */GUID.prototype.hexadecimal = function (num, x, y) {\n      if (y != undefined) { return parseInt(num.toString(), y).toString(x); }\n      else { return parseInt(num.toString()).toString(x); }\n    }\n    /* * 功能：格式化32位的字符串为GUID模式的字符串 * 参数：第1个参数表示32位的字符串 * 返回值：标准GUID格式的字符串 */\n    GUID.prototype.formatGUID = function (guidStr) {\n      var str1 = guidStr.slice(0, 8) + '-', str2 = guidStr.slice(8, 12) + '-', str3 = guidStr.slice(12, 16) + '-', str4 = guidStr.slice(16, 20) + '-', str5 = guidStr.slice(20);\n      return str1 + str2 + str3 + str4 + str5;\n    }\n  }\n}\n/**\n * 有效手机号验证\n * @param {*} str\n */\nexport function isPoneNumber(str) {\n  var myreg = /^[1][3,4,5,6,7,8,9][0-9]{9}$/;\n  if (!myreg.test(str)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\n/**\n * 获取会员转账状态同时进行跳转显示\n * @param _this 调用的上下文\n */\n// export function getMemberTransferState(_this) {\n//   _this.mLoading(true, \"请稍等，处理中...\");\n//   _this.$http.get(`${_this.cApi}/memberUser/membercoin.json`).then(result => {\n//     if (result.code == 0) {\n//       if (result.data >= 0) {\n//         this.mWinOpen(\n//           \"会员转账\",\n//           () => import(\"@/components/usercenter/memberTransfer\"),\n//           {},\n//           400\n//         );\n//       } else if (result.data == -1) {\n//         _this.mWinOpen(\n//           \"请先完善资金密码\",\n//           () => import(\"@/components/usercenter/coinpassword\"),\n//           {},\n//           400\n//         );\n//         /* this.mAlert(\"请先设置资金密码\", () => {\n\n//         }); */\n//       } else if (result.data == -2) {\n//         _this.mAlert(\"请先绑定银行卡\", () => {\n//           _this.mWinOpen(\n//             \"绑定银行卡\",\n//             () => import(\"../components/usercenter/bindBankCard\"),\n//             {},\n//             600\n//           );\n//         });\n//       }\n//     }\n//   });\n// }\n"]}]}